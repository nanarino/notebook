import{_ as i,c as a,o as t,ah as p}from"./chunks/framework.Dv7AZ4b0.js";const c=JSON.parse('{"title":"HelloWorld","description":"","frontmatter":{},"headers":[],"relativePath":"python/index.md","filePath":"python/index.md","lastUpdated":1734619541000}'),e={name:"python/index.md"};function l(n,s,h,o,r,d){return t(),a("div",null,s[0]||(s[0]=[p(`<h1 id="helloworld" tabindex="-1">HelloWorld <a class="header-anchor" href="#helloworld" aria-label="Permalink to &quot;HelloWorld&quot;">​</a></h1><h2 id="常识" tabindex="-1">常识 <a class="header-anchor" href="#常识" aria-label="Permalink to &quot;常识&quot;">​</a></h2><p>熟悉 Windows 操作系统的基本使用：</p><ul><li>压缩/解压文件</li><li>安装/卸载软件</li><li>添加环境变量/服务</li><li>修改后缀/注册表</li></ul><p>熟悉搜索引擎的使用：</p><ul><li>谷歌</li><li>必应</li><li>哔哩哔哩</li></ul><h2 id="安装环境" tabindex="-1">安装环境 <a class="header-anchor" href="#安装环境" aria-label="Permalink to &quot;安装环境&quot;">​</a></h2><p>传统安装方式: <code>choco install python</code> 或安装包</p><p>更推荐使用 <code>uv</code> 或者 <code>rye</code> 来管理python版本</p><p>我使用的是：<a href="https://github.com/astral-sh/uv" target="_blank" rel="noreferrer">astral-sh/uv</a></p><h2 id="虚拟环境" tabindex="-1">虚拟环境 <a class="header-anchor" href="#虚拟环境" aria-label="Permalink to &quot;虚拟环境&quot;">​</a></h2><p>如果你使用传统方式安装python，需要激活虚拟环境（以 Windows 例）：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PS C:\\Users\\Administrator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">py </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m venv .venv</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PS C:\\Users\\Administrator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.\\.venv\\Scripts\\activate</span></span></code></pre></div><p>在虚拟环境中 <code>pip</code> 和 <code>python</code> 可以直接使用</p><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><ul><li><p>windows 下安装后:</p><div class="warning custom-block"><p class="custom-block-title">C:\\Users\\Administrator&gt;python -V</p><p>&#39;python&#39; 不是内部或外部命令，也不是可运行的程序或批处理文件。</p></div><p>对于传统安装方式，这是没有设置环境变量，但可以使用 <code>py</code> 命令</p><p>对于 <code>uv</code> 安装的python这是正常的，可以使用 <code>uv python list</code> 获取python路径</p><div class="warning custom-block"><p class="custom-block-title">C:\\Users\\Administrator&gt;pip -V</p><p>&#39;pip&#39; 不是内部或外部命令，也不是可运行的程序或批处理文件。</p></div><p>问题同上，但你也可以使用 <code>python -m pip</code> 命令或进入虚拟环境</p><div class="warning custom-block"><p class="custom-block-title">C:\\Users\\Administrator&gt;pip -V</p><p>You are using pip version 10.0.3, however version 19.1.1 is available.<br> You should consider upgrading via the &#39;python -m pip install --upgrade pip&#39; command.</p></div><p>按照上述命令进行升级 pip</p></li><li><p>pip 下载非标准库/第三方模块速度过慢<br> 可以使用清华大学镜像</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 第三方模块名字</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://pypi.tuna.tsinghua.edu.cn/simple</span></span></code></pre></div></li></ul><hr><ul><li><strong>多版本</strong>问题</li></ul><p>传统方式安装的python，可透过 <code>py</code> 命令列出安装过的 python 以及路径：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C:\\Users\\Administrator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">py </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">paths</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">V:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.11</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python311\\</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">python.exe</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">V:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python39\\</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">python.exe</span></span></code></pre></div><p>在项目中直接指定虚拟环境来解决。因为在虚拟环境中原 python 和 pip 的环境变量都无效化了。</p><p><code>uv</code> 项目里运行python脚本则相当于每次运行前自动进入虚拟环境，执行完毕自动退出虚拟环境。</p>`,22)]))}const g=i(e,[["render",l]]);export{c as __pageData,g as default};
